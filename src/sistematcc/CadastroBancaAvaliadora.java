package sistematcc;
import java.util.ArrayList;
import DAO.DAOBancaAvaliadora;
import DAO.DAOprofessor;
import javax.swing.JOptionPane;
import models.BancaAvaliadora;
import models.Professor;
public class CadastroBancaAvaliadora extends javax.swing.JInternalFrame {

    private DAOBancaAvaliadora listaBancas;
    private DAOprofessor listaProfessores;
    
    public CadastroBancaAvaliadora(DAOBancaAvaliadora listaBancas, DAOprofessor listaProfessores) {
        initComponents();
        this.listaBancas = listaBancas;
        this.listaProfessores = listaProfessores;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        primeiroProfessor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        segundoProfessor = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        terceiroProfessor = new javax.swing.JTextField();
        cadastrar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Cadastro de banca avaliadora");

        jLabel1.setText("Primeiro Professor:");

        primeiroProfessor.setText("      Nome do primeiro professor");
        primeiroProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeiroProfessorActionPerformed(evt);
            }
        });

        jLabel2.setText("Segundo Professor:");

        segundoProfessor.setText("      Nome do segundo professor");

        jLabel3.setText("Terceiro Professor:");

        terceiroProfessor.setText("      Nome do terceiro professor");

        cadastrar.setText("Cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(primeiroProfessor)
                    .addComponent(segundoProfessor, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(terceiroProfessor))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cadastrar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(primeiroProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(segundoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(terceiroProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cadastrar)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        
        //guarda nas variaveis o valor dos inputs
        String prof1 = primeiroProfessor.getText();
        String prof2 = segundoProfessor.getText();
        String prof3 = terceiroProfessor.getText();
        //se algum campo estiver vazio
        if(prof1.isEmpty() || prof2.isEmpty() || prof3.isEmpty()) {
            mensagem("Por favor, preencha todos os campos");
        }
        else {
            //procura se existe professor com esse nome
            Professor prof_1 = listaProfessores.search(prof1);
            Professor prof_2 = listaProfessores.search(prof2);
            Professor prof_3 = listaProfessores.search(prof3);

            if(prof_1 == null) {
                mensagem("Primeiro Professor Não Encontrado");
            }
            if(prof_2 == null) {
                mensagem("Segundo Professor Não Encontrado");
            }
            if(prof_3 == null) {
                mensagem("Terceiro Professor Não Encontrado");
            }
            if(prof_3 != null && prof_1 != null && prof_2 != null){
                BancaAvaliadora novaBanca = new BancaAvaliadora(prof_1, prof_2, prof_3);
                if(listaBancas.add(novaBanca)) {
                    mensagem("Banca Avaliadora cadastrada com sucesso!");
                    this.setVisible(false);
                }
                
            }
        }
    }//GEN-LAST:event_cadastrarActionPerformed

    private void primeiroProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeiroProfessorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_primeiroProfessorActionPerformed

    private void mensagem(String msg) {
        JOptionPane.showMessageDialog(null, msg);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField primeiroProfessor;
    private javax.swing.JTextField segundoProfessor;
    private javax.swing.JTextField terceiroProfessor;
    // End of variables declaration//GEN-END:variables
}
